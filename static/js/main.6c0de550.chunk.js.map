{"version":3,"sources":["Load.js","lchart.js","about.js","app.js","index.js"],"names":["Load","LinearProgress","color","style","height","margin","LineGraph","chartRef","React","createRef","myChartRef","this","current","getContext","data","props","labeldata","map","i","sem","datadata","percentage","pop","Chart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","id","ref","Component","About","json","x","Container","maxWidth","Button","variant","startIcon","href","marginTop","name","TableContainer","component","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","scope","marks","useStyles","makeStyles","theme","beg","spacing","form","width","submit","branches","value","App","classes","useState","branch","setbranch","setname","brer","setbrer","response","setresponse","load","setload","useEffect","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","SnackbarContent","message","className","onSubmit","event","preventDefault","fetch","then","TextField","error","select","fullWidth","helperText","onChange","target","option","MenuItem","required","onInput","ReactDOM","render","num","bg","document","getElementById"],"mappings":"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","file":"static/js/main.6c0de550.chunk.js","sourcesContent":["import React from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nexport default function Load() {\r\n\r\n  return (\r\n      <LinearProgress color=\"secondary\" style={{height: '5px' , margin: '-7.68px' }}/>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\n\r\nexport default class LineGraph extends Component {\r\n    chartRef = React.createRef();\r\n    \r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        const data = this.props.data;\r\n\r\n        const labeldata = data.map( (i) => {\r\n            return i.sem;\r\n        })\r\n        const datadata = data.map( (i) => {\r\n            return i.percentage;\r\n        })\r\n        labeldata.pop();\r\n        datadata.pop();\r\n        \r\n        new Chart(myChartRef, {\r\n            type: 'line',\r\n            data: {\r\n                labels: labeldata,\r\n                datasets: [{\r\n                    label: 'Percentage in each sem',\r\n                    data: datadata,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LineGraph from \"./lchart\";\r\n\r\n\r\nexport default function About(props) {\r\n\r\n    const json = props.data.map(function(x) {\r\n      return {    \r\n          \"sem\": x[0],\r\n          \"marks\": x[1],\r\n          \"percentage\": x[2]\r\n      }\r\n  })\r\n\r\n  return (\r\n      <Container maxWidth=\"md\">\r\n          <Button variant=\"contained\" color=\"primary\" startIcon={<HomeIcon/>} href=\"/webresult/\">Home</Button>\r\n          <h2 style={{marginTop:6}}> Hello {props.name}</h2>\r\n            <TableContainer component={Container}>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\"><b>Sem</b></TableCell>\r\n                    <TableCell align=\"center\"><b>Marks</b></TableCell>\r\n                    <TableCell align=\"center\"><b>Percentage</b></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {json.map((row) => (\r\n                    <TableRow key={row.sem}>\r\n                      <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        {row.sem}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.marks}</TableCell>\r\n                      <TableCell align=\"center\">{row.percentage}%</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          <LineGraph data={json}/>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Load from \"./Load\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useEffect } from 'react';\r\nimport About from \"./about\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    beg:{\r\n      marginTop: theme.spacing(10),\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nconst branches = [\r\n    {\r\n      value: 'Choose',\r\n      label: 'Choose',\r\n    },\r\n    {\r\n      value: 'C S',\r\n      label: 'CSE',\r\n    },\r\n    {\r\n      value: 'EC',\r\n      label: 'ECE',\r\n    },\r\n    {\r\n      value: 'EE',\r\n      label: 'EE',\r\n    },\r\n    {\r\n      value: 'CE',\r\n      label: 'CE'\r\n    },\r\n    {\r\n      value: 'ME',\r\n      label: 'ME',\r\n    },\r\n    {\r\n      value: 'BT',\r\n      label: 'BT',\r\n    },\r\n  ];\r\n\r\n\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    const [branch, setbranch] = React.useState('Choose');\r\n    const [name, setname] = React.useState('')\r\n    const [brer, setbrer] = React.useState(false)\r\n    const [response, setresponse] = React.useState(0);\r\n    const [load, setload] = React.useState(false);\r\n\r\n    \r\n    const handleBranch = (event) => {\r\n        setbranch(event.target.value);\r\n        if (event.target.value === 'Choose') setbrer(true); else setbrer(false);\r\n    };\r\n\r\n    const handleNaam = (event) => {\r\n        setname(event.target.value)\r\n    };\r\n\r\n    const Response = () =>{\r\n      let url = 'https://result18-22.herokuapp.com/about?name=' + name + '&branch=' + branch;\r\n            fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => setresponse(data));\r\n            \r\n    };\r\n\r\n    useEffect(() => {\r\n      if(response == 0){}\r\n      else if(response === \"nf\") {\r\n        setload(false);\r\n        setTimeout(() => setresponse(0), 4000);\r\n      }\r\n  },[response]\r\n  );\r\n\r\n  const fvalidate = (event) => {\r\n        event.preventDefault();\r\n        if (branch === 'Choose'){\r\n            setbrer(true)\r\n        }\r\n        else{\r\n          setload(true)\r\n          Response();\r\n        }\r\n    }\r\n\r\n    return (<>\r\n      {response === 0 || response === \"nf\" ? \r\n        <>\r\n        {load ? <Load/> : null}\r\n        <Container maxWidth=\"sm\" >\r\n              <Snackbar\r\n                  anchorOrigin = {{vertical : 'top', horizontal: 'center' }}\r\n                  open={response === \"nf\" ? true : false}>\r\n                    <SnackbarContent style={{ backgroundColor: 'rgba(255,0,0,0.7)' }} \r\n                        message=\"The entered data didn't matched, please try again !\" />\r\n              </Snackbar>\r\n            <h2 className={classes.beg}> Hello {name}</h2>\r\n            <p>This is a Django - Reactjs based project where anyone from the batch 2018-22 can have a quick reference of their performance\r\n                 in different semesters by a table indicating minimal necessary things and a graph.</p>\r\n            <form className={classes.form} onSubmit={fvalidate}>\r\n                <TextField name=\"branch\"\r\n                          id=\"branch\" \r\n                          error={brer}\r\n                          select\r\n                          label=\"branch\"\r\n                          fullWidth\r\n                          helperText= {brer ? 'please choose correct branch' : 'please choose your branch' }\r\n                          value = {branch}\r\n                          onChange={handleBranch} >\r\n                          {branches.map ((option) =>(\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                              </MenuItem>\r\n                          ))}\r\n                </TextField>\r\n\r\n                {branch !== 'Choose' ? <TextField style={{marginTop: \"10px\"}} type={branch === 'CE' ? \"number\" : \"text\"}\r\n                          required \r\n                          fullWidth \r\n                          id=\"name\" \r\n                          name=\"name\"\r\n                          label={branch === 'CE' ? \"College-ID\" :  \"Name\"}\r\n                          helperText={branch === 'CE' ? \"Please enter your College-ID\" :  \"Please enter your full name\" }\r\n                          onInput={handleNaam} />\r\n                        :\r\n                        null}\r\n\r\n                <center>\r\n                  <Button className={classes.submit} type=\"submit\" variant=\"contained\" color=\"primary\" id=\"smb\" startIcon={<DoubleArrowIcon/>} >\r\n                    {load ? \"loading...\" : \"Submit\" }\r\n                  </Button></center>                  \r\n            </form>\r\n        </Container></>\r\n        :\r\n        <About data={response} name={name}/>\r\n      }\r\n      </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ParticlesBg from 'particles-bg'\nimport App from \"./app\";\n\nReactDOM.render(\n  <>\n    <App />\n    <ParticlesBg type=\"cobweb\" num=\"30\" color=\"#a6a4ad\" bg={true} />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}